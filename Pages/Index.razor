@page "/"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http
@inject DialogService DialogService

<PageTitle>Antonin Rouxel - Portfolio</PageTitle>

<section id="home" class="d-flex">
    <div class="container col-xxl-8 px-4 py-5 m-auto">
        <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
            <div class="col-10 col-sm-8 col-lg-6">
                @if (github.profile != null)
                {
                    <img src="@github.profile!.avatar_url" class="d-block mx-lg-auto img-fluid" alt="avatar" loading="lazy">
                }
            </div>
            <div class="col-lg-6">
                <h1 class="display-5 fw-bold lh-1 mb-3">Antonin Rouxel</h1>
                <p class="lead">Quickly design and customize responsive mobile-first sites with Bootstrap, the world’s
                    most popular front-end open source toolkit, featuring Sass variables and mixins, responsive grid
                    system, extensive prebuilt components, and powerful JavaScript plugins.</p>
                <div class="d-grid gap-2 d-md-flex justify-content-md-start">
                    <button type="button" class="btn btn-primary btn-lg px-4 me-md-2">Primary</button>
                    <button type="button" class="btn btn-outline-secondary btn-lg px-4">Default</button>
                </div>
            </div>
        </div>
    </div>
</section>


@if (github.repo != null)
{
    <section id="repository" class="d-flex">
        <RadzenDataList class="w-75 m-auto" PageSize="4" WrapItems="true" AllowPaging="true" Data="@(github.repo)"
        TItem="Repo">
            <Template Context="item">
                <RadzenCard Style="width: 250px;" Class="rz-border-radius-3">
                    <div class="d-flex flex-row p-3">
                        <RadzenImage Path="@github.profile!.avatar_url" Class="rounded-circle float-start me-3"
                        Style="width: 100px; height: 100px;" />
                        <div>
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Github
                            </RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@(item.name)</b></RadzenText>
                        </div>
                    </div>
                    <RadzenCard Class="my-3 rz-background-color-primary-lighter rz-shadow-0 rz-border-radius-0"
                    style="margin: 0 calc(-1 * var(--rz-card-padding)); padding: 2rem; height: 200px;">
                        <RadzenText TextStyle="TextStyle.H6" Class="rz-color-primary-light">
                            <strong>Information</strong>
                        </RadzenText>
                        <div class="row">
                            <div>
                                <RadzenText TextStyle="TextStyle.Overline" Class="rz-color-primary-light d-flex mt-3 mb-0">
                                    Description</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@(item.description)</b>
                                </RadzenText>
                            </div>
                        </div>
                    </RadzenCard>
                    <div class="d-flex">
                        <RadzenButton Class="me-auto" Text="Plus d'information" Variant=@Variant.Outlined
                        ButtonStyle="@ButtonStyle.Secondary" Click="() => MoreInformationRepo(item)" />
                    </div>
                </RadzenCard>
            </Template>
        </RadzenDataList>
    </section>
}

@code {
    private Github github = new Github();
    protected override async Task OnInitializedAsync()
    {
        github.profile = await Http.GetFromJsonAsync<Profile>("https://api.github.com/users/anrouxel");
        github.repo = await Http.GetFromJsonAsync<Repo[]>(github!.profile!.repos_url);
    }

    public async Task MoreInformationRepo(Repo repo)
    {
        await DialogService.OpenAsync<DialogCardRepo>($"Repo : {repo.name}",
        new Dictionary<string, object>() { { "repo", repo } },
        new DialogOptions() { Width = "700px", Height = "508px", Resizable = true, Draggable = true });
    }
}